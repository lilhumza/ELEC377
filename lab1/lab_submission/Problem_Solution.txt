The Problem:
The purpose of this lab was to create a Linux module that would return PCB information about the currently running process. This information included the name of the process, the PID, PPID, State (running, waiting, or stopped). Along with the Real, Effective, and Saved UID and the Real, Effective and Saved GID. This information is stored in different places while the program is running so we were tasked with creating a module that would cleanly display it all in separate lines. The end goal was to help us gain some understanding of the internal data structures of the Linux kernel. 

The Solution:
To tackle this problem, the group had to create multiple printing lines that would find the information required and print it out for easy viewing. This required the use of pointers to take us to the right directory and find the variable that holds the information required. One example is finding the Real UID; for this the value is found under current->cred->uid.val, and this would come as an integer. This was done for all the aforementioned variables that were required for the final result. Along with this, the State has 3 possible options, so when the state was found there must be an if else statement to print the right one. This was done very easily and worked as intended. The sources for the information were the sched.h, cred.h and uidguid.h files part of the Linux various headers native to and included with the Linux distribution - linux-headers-5.4.0-162-generic.

